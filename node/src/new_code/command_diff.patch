9c9
< use sc_cli::{ChainSpec, RuntimeVersion, SubstrateCli};
---
> use sc_cli::SubstrateCli;
46,49d45
< 
< 	fn native_runtime_version(_: &Box<dyn ChainSpec>) -> &'static RuntimeVersion {
< 		&node_template_runtime::VERSION
< 	}
102c98
< 					sc_finality_grandpa::revert(client, blocks)?;
---
> 					sc_consensus_grandpa::revert(client, blocks)?;
124c120
< 						cmd.run::<Block, service::ExecutorDispatch>(config)
---
> 						cmd.run::<Block, ()>(config)
176,187c172
< 		Some(Subcommand::TryRuntime(cmd)) => {
< 			let runner = cli.create_runner(cmd)?;
< 			runner.async_run(|config| {
< 				// we don't need any of the components of new_partial, just a runtime, or a task
< 				// manager to do `async_run`.
< 				let registry = config.prometheus_config.as_ref().map(|cfg| &cfg.registry);
< 				let task_manager =
< 					sc_service::TaskManager::new(config.tokio_handle.clone(), registry)
< 						.map_err(|e| sc_cli::Error::Service(sc_service::Error::Prometheus(e)))?;
< 				Ok((cmd.run::<Block, service::ExecutorDispatch>(config), task_manager))
< 			})
< 		},
---
> 		Some(Subcommand::TryRuntime) => Err(try_runtime_cli::DEPRECATION_NOTICE.into()),
203c188
< }
\ No newline at end of file
---
> }
